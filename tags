!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABT_Stack_Size	LPC2400.s	/^ABT_Stack_Size  EQU     0x00000008$/;"	d
ACTIVATE_CS	LCD/lcd_hw.c	39;"	d	file:
AISLE	utility.h	/^    AISLE,$/;"	e	enum:Region_t
BACKLIGHT_PIN	LCD/lcd_hw.c	32;"	d	file:
BAUD_RATE	utility.h	8;"	d
BLACK	LCD/lcd_grph.h	49;"	d
BLUE	LCD/lcd_grph.h	58;"	d
BUFEN_Const	LPC2400.s	/^BUFEN_Const         EQU (1 << 19)       ; Buffer enable bit$/;"	d
Button	utility.h	/^} Button;$/;"	t	typeref:struct:button
ButtonState	utility.h	/^typedef enum ButtonState$/;"	g
ButtonState	utility.h	/^} ButtonState;$/;"	t	typeref:enum:ButtonState
CCLKCFG_OFS	LPC2400.s	/^CCLKCFG_OFS     EQU     0x104           ; CPU Clock Divider Reg Offset$/;"	d
CCLKCFG_Val	LPC2400.s	/^CCLKCFG_Val     EQU     0x00000005$/;"	d
CCLKDivValue	LCD/config.h	16;"	d
CLKSRCSEL_OFS	LPC2400.s	/^CLKSRCSEL_OFS   EQU     0x10C           ; Clock Source Sel Reg Offset$/;"	d
CLKSRCSEL_Val	LPC2400.s	/^CLKSRCSEL_Val   EQU     0x00000001$/;"	d
CLOCK_SETUP	LPC2400.s	/^CLOCK_SETUP     EQU     1$/;"	d
COMMAND_H	utility.h	2;"	d
CONSOLE_H	console.h	2;"	d
CS_PIN	LCD/lcd_hw.c	38;"	d	file:
CYAN	LCD/lcd_grph.h	60;"	d
Command	utility.h	/^typedef struct Command $/;"	s
Command	utility.h	/^} Command;$/;"	t	typeref:struct:Command
DARK_CYAN	LCD/lcd_grph.h	52;"	d
DARK_GRAY	LCD/lcd_grph.h	57;"	d
DARK_GREEN	LCD/lcd_grph.h	51;"	d
DAbt_Addr	LPC2400.s	/^DAbt_Addr       DCD     DAbt_Handler$/;"	l
DAbt_Handler	LPC2400.s	/^DAbt_Handler    B       DAbt_Handler$/;"	l
DEACTIVATE_CS	LCD/lcd_hw.c	40;"	d	file:
DICE	utility.h	/^    DICE,$/;"	e	enum:Region_t
DISPLAY_HEIGHT	LCD/lcd_grph.h	44;"	d
DISPLAY_WIDTH	LCD/lcd_grph.h	42;"	d
DYN_MEM0_BASE	LPC2400.s	/^DYN_MEM0_BASE   EQU     0xA0000000   $/;"	d
DYN_MEM1_BASE	LPC2400.s	/^DYN_MEM1_BASE   EQU     0xB0000000   $/;"	d
DYN_MEM2_BASE	LPC2400.s	/^DYN_MEM2_BASE   EQU     0xC0000000   $/;"	d
DYN_MEM3_BASE	LPC2400.s	/^DYN_MEM3_BASE   EQU     0xD0000000   $/;"	d
DrawSlider	lcd.c	/^void DrawSlider()$/;"	f
EMC_BASE	LPC2400.s	/^EMC_BASE            EQU 0xFFE08000      ; EMC Base Address$/;"	d
EMC_CONFIG_OFS	LPC2400.s	/^EMC_CONFIG_OFS      EQU 0x008$/;"	d
EMC_CONFIG_Val	LPC2400.s	/^EMC_CONFIG_Val      EQU 0x00000000$/;"	d
EMC_CTRL_OFS	LPC2400.s	/^EMC_CTRL_OFS        EQU 0x000$/;"	d
EMC_CTRL_Val	LPC2400.s	/^EMC_CTRL_Val        EQU 0x00000001$/;"	d
EMC_DYNAMIC_SETUP	LPC2400.s	/^EMC_DYNAMIC_SETUP   EQU 1$/;"	d
EMC_DYNCS0_SETUP	LPC2400.s	/^EMC_DYNCS0_SETUP    EQU 1$/;"	d
EMC_DYNCS1_SETUP	LPC2400.s	/^EMC_DYNCS1_SETUP    EQU 0$/;"	d
EMC_DYNCS2_SETUP	LPC2400.s	/^EMC_DYNCS2_SETUP    EQU 0$/;"	d
EMC_DYNCS3_SETUP	LPC2400.s	/^EMC_DYNCS3_SETUP    EQU 0$/;"	d
EMC_DYN_APR_OFS	LPC2400.s	/^EMC_DYN_APR_OFS     EQU 0x03C$/;"	d
EMC_DYN_APR_Val	LPC2400.s	/^EMC_DYN_APR_Val     EQU 0x00000002$/;"	d
EMC_DYN_CFG0_OFS	LPC2400.s	/^EMC_DYN_CFG0_OFS    EQU 0x100$/;"	d
EMC_DYN_CFG0_Val	LPC2400.s	/^EMC_DYN_CFG0_Val    EQU 0x00080680$/;"	d
EMC_DYN_CFG1_OFS	LPC2400.s	/^EMC_DYN_CFG1_OFS    EQU 0x140$/;"	d
EMC_DYN_CFG1_Val	LPC2400.s	/^EMC_DYN_CFG1_Val    EQU 0x00000000$/;"	d
EMC_DYN_CFG2_OFS	LPC2400.s	/^EMC_DYN_CFG2_OFS    EQU 0x160$/;"	d
EMC_DYN_CFG2_Val	LPC2400.s	/^EMC_DYN_CFG2_Val    EQU 0x00000000$/;"	d
EMC_DYN_CFG3_OFS	LPC2400.s	/^EMC_DYN_CFG3_OFS    EQU 0x180$/;"	d
EMC_DYN_CFG3_Val	LPC2400.s	/^EMC_DYN_CFG3_Val    EQU 0x00000000$/;"	d
EMC_DYN_CTRL_OFS	LPC2400.s	/^EMC_DYN_CTRL_OFS    EQU 0x020$/;"	d
EMC_DYN_DAL_OFS	LPC2400.s	/^EMC_DYN_DAL_OFS     EQU 0x040$/;"	d
EMC_DYN_DAL_Val	LPC2400.s	/^EMC_DYN_DAL_Val     EQU 0x00000005$/;"	d
EMC_DYN_MRD_OFS	LPC2400.s	/^EMC_DYN_MRD_OFS     EQU 0x058$/;"	d
EMC_DYN_MRD_Val	LPC2400.s	/^EMC_DYN_MRD_Val     EQU 0x00000002$/;"	d
EMC_DYN_RASCAS0_OFS	LPC2400.s	/^EMC_DYN_RASCAS0_OFS EQU 0x104$/;"	d
EMC_DYN_RASCAS0_Val	LPC2400.s	/^EMC_DYN_RASCAS0_Val EQU 0x00000303$/;"	d
EMC_DYN_RASCAS1_OFS	LPC2400.s	/^EMC_DYN_RASCAS1_OFS EQU 0x144$/;"	d
EMC_DYN_RASCAS1_Val	LPC2400.s	/^EMC_DYN_RASCAS1_Val EQU 0x00000303$/;"	d
EMC_DYN_RASCAS2_OFS	LPC2400.s	/^EMC_DYN_RASCAS2_OFS EQU 0x164$/;"	d
EMC_DYN_RASCAS2_Val	LPC2400.s	/^EMC_DYN_RASCAS2_Val EQU 0x00000303$/;"	d
EMC_DYN_RASCAS3_OFS	LPC2400.s	/^EMC_DYN_RASCAS3_OFS EQU 0x184$/;"	d
EMC_DYN_RASCAS3_Val	LPC2400.s	/^EMC_DYN_RASCAS3_Val EQU 0x00000303$/;"	d
EMC_DYN_RAS_OFS	LPC2400.s	/^EMC_DYN_RAS_OFS     EQU 0x034$/;"	d
EMC_DYN_RAS_Val	LPC2400.s	/^EMC_DYN_RAS_Val     EQU 0x00000003$/;"	d
EMC_DYN_RC_OFS	LPC2400.s	/^EMC_DYN_RC_OFS      EQU 0x048$/;"	d
EMC_DYN_RC_Val	LPC2400.s	/^EMC_DYN_RC_Val      EQU 0x00000005$/;"	d
EMC_DYN_RD_CFG_OFS	LPC2400.s	/^EMC_DYN_RD_CFG_OFS  EQU 0x028$/;"	d
EMC_DYN_RD_CFG_Val	LPC2400.s	/^EMC_DYN_RD_CFG_Val  EQU 0x00000001$/;"	d
EMC_DYN_RFC_OFS	LPC2400.s	/^EMC_DYN_RFC_OFS     EQU 0x04C$/;"	d
EMC_DYN_RFC_Val	LPC2400.s	/^EMC_DYN_RFC_Val     EQU 0x00000005$/;"	d
EMC_DYN_RFSH_OFS	LPC2400.s	/^EMC_DYN_RFSH_OFS    EQU 0x024$/;"	d
EMC_DYN_RFSH_Val	LPC2400.s	/^EMC_DYN_RFSH_Val    EQU 0x0000001C$/;"	d
EMC_DYN_RP_OFS	LPC2400.s	/^EMC_DYN_RP_OFS      EQU 0x030$/;"	d
EMC_DYN_RP_Val	LPC2400.s	/^EMC_DYN_RP_Val      EQU 0x00000002$/;"	d
EMC_DYN_RRD_OFS	LPC2400.s	/^EMC_DYN_RRD_OFS     EQU 0x054$/;"	d
EMC_DYN_RRD_Val	LPC2400.s	/^EMC_DYN_RRD_Val     EQU 0x00000001$/;"	d
EMC_DYN_SREX_OFS	LPC2400.s	/^EMC_DYN_SREX_OFS    EQU 0x038$/;"	d
EMC_DYN_SREX_Val	LPC2400.s	/^EMC_DYN_SREX_Val    EQU 0x00000007$/;"	d
EMC_DYN_WR_OFS	LPC2400.s	/^EMC_DYN_WR_OFS      EQU 0x044$/;"	d
EMC_DYN_WR_Val	LPC2400.s	/^EMC_DYN_WR_Val      EQU 0x00000001$/;"	d
EMC_DYN_XSR_OFS	LPC2400.s	/^EMC_DYN_XSR_OFS     EQU 0x050$/;"	d
EMC_DYN_XSR_Val	LPC2400.s	/^EMC_DYN_XSR_Val     EQU 0x00000007$/;"	d
EMC_PCONP_Const	LPC2400.s	/^EMC_PCONP_Const     EQU (1 << 11)       ; PCONP val to enable power for EMC$/;"	d
EMC_PINSEL5_Val	LPC2400.s	/^EMC_PINSEL5_Val     EQU 0x55010115      ; !CAS, !RAS, CLKOUT0, !DYCS0, DQMOUT0, DQMOUT1, DQMOUT2, DQMOUT3$/;"	d
EMC_PINSEL6_Val	LPC2400.s	/^EMC_PINSEL6_Val     EQU 0x55555555      ; D0 .. D15$/;"	d
EMC_PINSEL7_Val	LPC2400.s	/^EMC_PINSEL7_Val     EQU 0x55555555      ; D16..D31$/;"	d
EMC_PINSEL8_Val	LPC2400.s	/^EMC_PINSEL8_Val     EQU 0x55555555      ; A0 .. A15$/;"	d
EMC_PINSEL9_Val	LPC2400.s	/^EMC_PINSEL9_Val     EQU 0x50055555;     ; A16 .. A23, !OE, !WE, !CS0, !CS1$/;"	d
EMC_SETUP	LPC2400.s	/^EMC_SETUP           EQU 1$/;"	d
EMC_STACS0_SETUP	LPC2400.s	/^EMC_STACS0_SETUP    EQU 1$/;"	d
EMC_STACS1_SETUP	LPC2400.s	/^EMC_STACS1_SETUP    EQU 0$/;"	d
EMC_STACS2_SETUP	LPC2400.s	/^EMC_STACS2_SETUP    EQU 0$/;"	d
EMC_STACS3_SETUP	LPC2400.s	/^EMC_STACS3_SETUP    EQU 0$/;"	d
EMC_STATIC_SETUP	LPC2400.s	/^EMC_STATIC_SETUP    EQU 1$/;"	d
EMC_STAT_OFS	LPC2400.s	/^EMC_STAT_OFS        EQU 0x004$/;"	d
EMC_STA_CFG0_OFS	LPC2400.s	/^EMC_STA_CFG0_OFS    EQU 0x200$/;"	d
EMC_STA_CFG0_Val	LPC2400.s	/^EMC_STA_CFG0_Val    EQU 0x00000081$/;"	d
EMC_STA_CFG1_OFS	LPC2400.s	/^EMC_STA_CFG1_OFS    EQU 0x220$/;"	d
EMC_STA_CFG1_Val	LPC2400.s	/^EMC_STA_CFG1_Val    EQU 0x00000000$/;"	d
EMC_STA_CFG2_OFS	LPC2400.s	/^EMC_STA_CFG2_OFS    EQU 0x240$/;"	d
EMC_STA_CFG2_Val	LPC2400.s	/^EMC_STA_CFG2_Val    EQU 0x00000000$/;"	d
EMC_STA_CFG3_OFS	LPC2400.s	/^EMC_STA_CFG3_OFS    EQU 0x260$/;"	d
EMC_STA_CFG3_Val	LPC2400.s	/^EMC_STA_CFG3_Val    EQU 0x00000000$/;"	d
EMC_STA_EXT_W_OFS	LPC2400.s	/^EMC_STA_EXT_W_OFS   EQU 0x080$/;"	d
EMC_STA_EXT_W_Val	LPC2400.s	/^EMC_STA_EXT_W_Val   EQU 0x00000000$/;"	d
EMC_STA_WOEN0_OFS	LPC2400.s	/^EMC_STA_WOEN0_OFS   EQU 0x208$/;"	d
EMC_STA_WOEN0_Val	LPC2400.s	/^EMC_STA_WOEN0_Val   EQU 0x00000002$/;"	d
EMC_STA_WOEN1_OFS	LPC2400.s	/^EMC_STA_WOEN1_OFS   EQU 0x228$/;"	d
EMC_STA_WOEN1_Val	LPC2400.s	/^EMC_STA_WOEN1_Val   EQU 0x00000000$/;"	d
EMC_STA_WOEN2_OFS	LPC2400.s	/^EMC_STA_WOEN2_OFS   EQU 0x248$/;"	d
EMC_STA_WOEN2_Val	LPC2400.s	/^EMC_STA_WOEN2_Val   EQU 0x00000000$/;"	d
EMC_STA_WOEN3_OFS	LPC2400.s	/^EMC_STA_WOEN3_OFS   EQU 0x268$/;"	d
EMC_STA_WOEN3_Val	LPC2400.s	/^EMC_STA_WOEN3_Val   EQU 0x00000000$/;"	d
EMC_STA_WPAGE0_OFS	LPC2400.s	/^EMC_STA_WPAGE0_OFS  EQU 0x210$/;"	d
EMC_STA_WPAGE0_Val	LPC2400.s	/^EMC_STA_WPAGE0_Val  EQU 0x0000001F$/;"	d
EMC_STA_WPAGE1_OFS	LPC2400.s	/^EMC_STA_WPAGE1_OFS  EQU 0x230$/;"	d
EMC_STA_WPAGE1_Val	LPC2400.s	/^EMC_STA_WPAGE1_Val  EQU 0x0000001F$/;"	d
EMC_STA_WPAGE2_OFS	LPC2400.s	/^EMC_STA_WPAGE2_OFS  EQU 0x250$/;"	d
EMC_STA_WPAGE2_Val	LPC2400.s	/^EMC_STA_WPAGE2_Val  EQU 0x0000001F$/;"	d
EMC_STA_WPAGE3_OFS	LPC2400.s	/^EMC_STA_WPAGE3_OFS  EQU 0x270$/;"	d
EMC_STA_WPAGE3_Val	LPC2400.s	/^EMC_STA_WPAGE3_Val  EQU 0x0000001F$/;"	d
EMC_STA_WRD0_OFS	LPC2400.s	/^EMC_STA_WRD0_OFS    EQU 0x20C$/;"	d
EMC_STA_WRD0_Val	LPC2400.s	/^EMC_STA_WRD0_Val    EQU 0x0000001F$/;"	d
EMC_STA_WRD1_OFS	LPC2400.s	/^EMC_STA_WRD1_OFS    EQU 0x22C$/;"	d
EMC_STA_WRD1_Val	LPC2400.s	/^EMC_STA_WRD1_Val    EQU 0x0000001F$/;"	d
EMC_STA_WRD2_OFS	LPC2400.s	/^EMC_STA_WRD2_OFS    EQU 0x24C$/;"	d
EMC_STA_WRD2_Val	LPC2400.s	/^EMC_STA_WRD2_Val    EQU 0x0000001F$/;"	d
EMC_STA_WRD3_OFS	LPC2400.s	/^EMC_STA_WRD3_OFS    EQU 0x26C$/;"	d
EMC_STA_WRD3_Val	LPC2400.s	/^EMC_STA_WRD3_Val    EQU 0x0000001F$/;"	d
EMC_STA_WTURN0_OFS	LPC2400.s	/^EMC_STA_WTURN0_OFS  EQU 0x218$/;"	d
EMC_STA_WTURN0_Val	LPC2400.s	/^EMC_STA_WTURN0_Val  EQU 0x0000000F$/;"	d
EMC_STA_WTURN1_OFS	LPC2400.s	/^EMC_STA_WTURN1_OFS  EQU 0x238$/;"	d
EMC_STA_WTURN1_Val	LPC2400.s	/^EMC_STA_WTURN1_Val  EQU 0x0000000F$/;"	d
EMC_STA_WTURN2_OFS	LPC2400.s	/^EMC_STA_WTURN2_OFS  EQU 0x258$/;"	d
EMC_STA_WTURN2_Val	LPC2400.s	/^EMC_STA_WTURN2_Val  EQU 0x0000000F$/;"	d
EMC_STA_WTURN3_OFS	LPC2400.s	/^EMC_STA_WTURN3_OFS  EQU 0x278$/;"	d
EMC_STA_WTURN3_Val	LPC2400.s	/^EMC_STA_WTURN3_Val  EQU 0x0000000F$/;"	d
EMC_STA_WWEN0_OFS	LPC2400.s	/^EMC_STA_WWEN0_OFS   EQU 0x204$/;"	d
EMC_STA_WWEN0_Val	LPC2400.s	/^EMC_STA_WWEN0_Val   EQU 0x00000002$/;"	d
EMC_STA_WWEN1_OFS	LPC2400.s	/^EMC_STA_WWEN1_OFS   EQU 0x224$/;"	d
EMC_STA_WWEN1_Val	LPC2400.s	/^EMC_STA_WWEN1_Val   EQU 0x00000000$/;"	d
EMC_STA_WWEN2_OFS	LPC2400.s	/^EMC_STA_WWEN2_OFS   EQU 0x244$/;"	d
EMC_STA_WWEN2_Val	LPC2400.s	/^EMC_STA_WWEN2_Val   EQU 0x00000000$/;"	d
EMC_STA_WWEN3_OFS	LPC2400.s	/^EMC_STA_WWEN3_OFS   EQU 0x264$/;"	d
EMC_STA_WWEN3_Val	LPC2400.s	/^EMC_STA_WWEN3_Val   EQU 0x00000000$/;"	d
EMC_STA_WWR0_OFS	LPC2400.s	/^EMC_STA_WWR0_OFS    EQU 0x214$/;"	d
EMC_STA_WWR0_Val	LPC2400.s	/^EMC_STA_WWR0_Val    EQU 0x0000001F$/;"	d
EMC_STA_WWR1_OFS	LPC2400.s	/^EMC_STA_WWR1_OFS    EQU 0x234$/;"	d
EMC_STA_WWR1_Val	LPC2400.s	/^EMC_STA_WWR1_Val    EQU  0x0000001F$/;"	d
EMC_STA_WWR2_OFS	LPC2400.s	/^EMC_STA_WWR2_OFS    EQU 0x254$/;"	d
EMC_STA_WWR2_Val	LPC2400.s	/^EMC_STA_WWR2_Val    EQU 0x0000001F$/;"	d
EMC_STA_WWR3_OFS	LPC2400.s	/^EMC_STA_WWR3_OFS    EQU 0x274$/;"	d
EMC_STA_WWR3_Val	LPC2400.s	/^EMC_STA_WWR3_Val    EQU 0x0000001F$/;"	d
EXTMEM_BASE	LPC2400.s	/^EXTMEM_BASE     EQU     0x80000000$/;"	d
FALSE	LCD/general.h	68;"	d
FIQ_Addr	LPC2400.s	/^FIQ_Addr        DCD     vPreemptiveTick		; FIQ used for preemptive tick$/;"	l
FIQ_Handler	LPC2400.s	/^FIQ_Handler     B       FIQ_Handler$/;"	l
FIQ_Stack_Size	LPC2400.s	/^FIQ_Stack_Size  EQU     0x00000800	; Using FIQ for preemptive tick$/;"	d
FLASH_BASE	LPC2400.s	/^FLASH_BASE      EQU     0x00000000   $/;"	d
FREERTOS_CONFIG_H	FreeRTOSConfig.h	68;"	d
F_Bit	LPC2400.s	/^F_Bit           EQU     0x40            ; when F bit is set, FIQ is disabled$/;"	d
Fcclk	LCD/config.h	21;"	d
Fcco	LCD/config.h	20;"	d
Fosc	LCD/config.h	19;"	d
Fpclk	LCD/config.h	22;"	d
GREEN	LCD/lcd_grph.h	59;"	d
Heap_Mem	LPC2400.s	/^Heap_Mem        SPACE   Heap_Size$/;"	l
Heap_Size	LPC2400.s	/^Heap_Size       EQU     0x00400000$/;"	d
I2C_AA	sensors.c	18;"	d	file:
I2C_I2EN	sensors.c	22;"	d	file:
I2C_SI	sensors.c	19;"	d	file:
I2C_STA	sensors.c	21;"	d	file:
I2C_STO	sensors.c	20;"	d	file:
I2C_Utills	sensors.c	/^void I2C_Utills(int choice, unsigned char *LedMap)$/;"	f
INCLUDE_uxTaskPriorityGet	FreeRTOSConfig.h	113;"	d
INCLUDE_vTaskCleanUpResources	FreeRTOSConfig.h	115;"	d
INCLUDE_vTaskDelay	FreeRTOSConfig.h	118;"	d
INCLUDE_vTaskDelayUntil	FreeRTOSConfig.h	117;"	d
INCLUDE_vTaskDelete	FreeRTOSConfig.h	114;"	d
INCLUDE_vTaskPrioritySet	FreeRTOSConfig.h	112;"	d
INCLUDE_vTaskSuspend	FreeRTOSConfig.h	116;"	d
IRQ_Addr	LPC2400.s	/^IRQ_Addr        DCD     IRQ_Handler$/;"	l
IRQ_Handler	LPC2400.s	/^IRQ_Handler     B       IRQ_Handler$/;"	l
IRQ_Stack_Size	LPC2400.s	/^IRQ_Stack_Size  EQU     0x00000800$/;"	d
I_Bit	LPC2400.s	/^I_Bit           EQU     0x80            ; when I bit is set, IRQ is disabled$/;"	d
LCD_COMMAND_16	LCD/lcd_hw.c	29;"	d	file:
LCD_DATA_16	LCD/lcd_hw.c	30;"	d	file:
LCD_H	lcd.h	2;"	d
LIGHT_GRAY	LCD/lcd_grph.h	56;"	d
MAGENTA	LCD/lcd_grph.h	62;"	d
MAMCR_OFS	LPC2400.s	/^MAMCR_OFS       EQU     0x00            ; MAM Control Offset$/;"	d
MAMCR_Val	LPC2400.s	/^MAMCR_Val       EQU     0x00000002$/;"	d
MAMTIM_OFS	LPC2400.s	/^MAMTIM_OFS      EQU     0x04            ; MAM Timing Offset$/;"	d
MAMTIM_Val	LPC2400.s	/^MAMTIM_Val      EQU     0x00000004$/;"	d
MAM_BASE	LPC2400.s	/^MAM_BASE        EQU     0xE01FC000      ; MAM Base Address$/;"	d
MAM_SETUP	LPC2400.s	/^MAM_SETUP       EQU     1$/;"	d
MAROON	LCD/lcd_grph.h	53;"	d
MASTER	utility.h	/^    MASTER = 0,$/;"	e	enum:Region_t
MAX_BUTTON	utility.h	9;"	d
MAX_EVENTS	utility.h	7;"	d
MEMMAP	LPC2400.s	/^MEMMAP          EQU     0xE01FC040      ; Memory Mapping Control$/;"	d
MODE_CMD	LPC2400.s	/^MODE_CMD            EQU (0x1 << 7)      ; MODE          Command$/;"	d
M_N_Lock	LPC2400.s	/^M_N_Lock        LDR     R3, [R0, #PLLSTAT_OFS]$/;"	l
Mode_ABT	LPC2400.s	/^Mode_ABT        EQU     0x17$/;"	d
Mode_FIQ	LPC2400.s	/^Mode_FIQ        EQU     0x11$/;"	d
Mode_IRQ	LPC2400.s	/^Mode_IRQ        EQU     0x12$/;"	d
Mode_SVC	LPC2400.s	/^Mode_SVC        EQU     0x13$/;"	d
Mode_SYS	LPC2400.s	/^Mode_SYS        EQU     0x1F$/;"	d
Mode_UND	LPC2400.s	/^Mode_UND        EQU     0x1B$/;"	d
Mode_USR	LPC2400.s	/^Mode_USR        EQU     0x10$/;"	d
NAVY	LCD/lcd_grph.h	50;"	d
NOP_CMD	LPC2400.s	/^NOP_CMD             EQU (0x3 << 7)      ; NOP           Command$/;"	d
NORMAL_CMD	LPC2400.s	/^NORMAL_CMD          EQU (0x0 << 7)      ; NORMAL        Command$/;"	d
NULL	LCD/general.h	65;"	d
OFF	utility.h	/^    OFF = 0,$/;"	e	enum:ButtonState
OLIVE	LCD/lcd_grph.h	55;"	d
ON	utility.h	/^    ON = 1$/;"	e	enum:ButtonState
OSCEN	LPC2400.s	/^OSCEN           EQU     (1<<5)          ; Main oscillator Enable$/;"	d
OSCRANGE	LPC2400.s	/^OSCRANGE        EQU     (1<<4)          ; Oscillator Range Select$/;"	d
OSCSTAT	LPC2400.s	/^OSCSTAT         EQU     (1<<6)          ; Main Oscillator Status$/;"	d
OSC_Loop	LPC2400.s	/^OSC_Loop        LDR     R3, [R0, #SCS_OFS]    ; Wait for main osc stabilize$/;"	l
PALL_CMD	LPC2400.s	/^PALL_CMD            EQU (0x2 << 7)      ; Precharge All Command$/;"	d
PAbt_Addr	LPC2400.s	/^PAbt_Addr       DCD     PAbt_Handler$/;"	l
PAbt_Handler	LPC2400.s	/^PAbt_Handler    B       PAbt_Handler$/;"	l
PCB_BASE	LPC2400.s	/^PCB_BASE            EQU 0xE002C000      ; PCB Base Address$/;"	d
PCLKSEL0_OFS	LPC2400.s	/^PCLKSEL0_OFS    EQU     0x1A8           ; Periph Clock Sel Reg 0 Offset$/;"	d
PCLKSEL0_Val	LPC2400.s	/^PCLKSEL0_Val    EQU     0x00000000$/;"	d
PCLKSEL1_OFS	LPC2400.s	/^PCLKSEL1_OFS    EQU     0x1AC           ; Periph Clock Sel Reg 0 Offset$/;"	d
PCLKSEL1_Val	LPC2400.s	/^PCLKSEL1_Val    EQU     0x00000000$/;"	d
PCONP_OFS	LPC2400.s	/^PCONP_OFS       EQU     0x0C4           ; Power Control for Periphs Reg Offset$/;"	d
PCON_OFS	LPC2400.s	/^PCON_OFS        EQU     0x0C0           ; Power Mode Control Reg Offset$/;"	d
PINSEL0_OFS	LPC2400.s	/^PINSEL0_OFS         EQU 0x00            ; PINSEL0  Address Offset$/;"	d
PINSEL10_OFS	LPC2400.s	/^PINSEL10_OFS        EQU 0x28            ; PINSEL10 Address Offset$/;"	d
PINSEL1_OFS	LPC2400.s	/^PINSEL1_OFS         EQU 0x04            ; PINSEL1  Address Offset$/;"	d
PINSEL2_OFS	LPC2400.s	/^PINSEL2_OFS         EQU 0x08            ; PINSEL2  Address Offset$/;"	d
PINSEL3_OFS	LPC2400.s	/^PINSEL3_OFS         EQU 0x0C            ; PINSEL3  Address Offset$/;"	d
PINSEL4_OFS	LPC2400.s	/^PINSEL4_OFS         EQU 0x10            ; PINSEL4  Address Offset$/;"	d
PINSEL5_OFS	LPC2400.s	/^PINSEL5_OFS         EQU 0x14            ; PINSEL5  Address Offset$/;"	d
PINSEL6_OFS	LPC2400.s	/^PINSEL6_OFS         EQU 0x18            ; PINSEL6  Address Offset$/;"	d
PINSEL7_OFS	LPC2400.s	/^PINSEL7_OFS         EQU 0x1C            ; PINSEL7  Address Offset$/;"	d
PINSEL8_OFS	LPC2400.s	/^PINSEL8_OFS         EQU 0x20            ; PINSEL8  Address Offset$/;"	d
PINSEL9_OFS	LPC2400.s	/^PINSEL9_OFS         EQU 0x24            ; PINSEL9  Address Offset$/;"	d
PLLCFG_OFS	LPC2400.s	/^PLLCFG_OFS      EQU     0x84            ; PLL Configuration Offset$/;"	d
PLLCFG_Val	LPC2400.s	/^PLLCFG_Val      EQU     0x0000000B$/;"	d
PLLCON_OFS	LPC2400.s	/^PLLCON_OFS      EQU     0x80            ; PLL Control Offset$/;"	d
PLLCON_PLLC	LPC2400.s	/^PLLCON_PLLC     EQU     (1<<1)          ; PLL Connect$/;"	d
PLLCON_PLLE	LPC2400.s	/^PLLCON_PLLE     EQU     (1<<0)          ; PLL Enable$/;"	d
PLLFEED_OFS	LPC2400.s	/^PLLFEED_OFS     EQU     0x8C            ; PLL Feed Offset$/;"	d
PLLSTAT_M	LPC2400.s	/^PLLSTAT_M       EQU     (0x7FFF<<0)     ; PLL M Value$/;"	d
PLLSTAT_N	LPC2400.s	/^PLLSTAT_N       EQU     (0xFF<<16)      ; PLL N Value$/;"	d
PLLSTAT_OFS	LPC2400.s	/^PLLSTAT_OFS     EQU     0x88            ; PLL Status Offset$/;"	d
PLLSTAT_PLOCK	LPC2400.s	/^PLLSTAT_PLOCK   EQU     (1<<26)         ; PLL Lock Status$/;"	d
PLL_Loop	LPC2400.s	/^PLL_Loop        LDR     R3, [R0, #PLLSTAT_OFS]$/;"	l
PLL_Loop	LPC2400.s	/^PLL_Loop        SUBS    R3, R3, #1$/;"	l
PLL_MValue	LCD/config.h	14;"	d
PLL_NValue	LCD/config.h	15;"	d
PURPLE	LCD/lcd_grph.h	54;"	d
QVGA_TOUCH_ENABLE	LCD/lcd_hw.c	34;"	d	file:
RAM_BASE	LPC2400.s	/^RAM_BASE        EQU     0x40000000$/;"	d
RED	LCD/lcd_grph.h	61;"	d
Region_t	utility.h	/^typedef enum Region_t$/;"	g
Region_t	utility.h	/^} Region_t;$/;"	t	typeref:enum:Region_t
Reset_Addr	LPC2400.s	/^Reset_Addr      DCD     Reset_Handler$/;"	l
Reset_Handler	LPC2400.s	/^Reset_Handler   $/;"	l
SCB_BASE	LPC2400.s	/^SCB_BASE        EQU     0xE01FC000      ; SCB Base Address$/;"	d
SCS_OFS	LPC2400.s	/^SCS_OFS         EQU     0x1A0           ; Sys Control and Status Reg Offset$/;"	d
SCS_Val	LPC2400.s	/^SCS_Val         EQU     0x00000020$/;"	d
SEATING	utility.h	/^    SEATING$/;"	e	enum:Region_t
SENSORS_H	sensors.h	2;"	d
SERIAL_COMMS_H	serial.h	55;"	d
STA_MEM0_BASE	LPC2400.s	/^STA_MEM0_BASE   EQU     0x80000000$/;"	d
STA_MEM1_BASE	LPC2400.s	/^STA_MEM1_BASE   EQU     0x81000000$/;"	d
STA_MEM2_BASE	LPC2400.s	/^STA_MEM2_BASE   EQU     0x82000000$/;"	d
STA_MEM3_BASE	LPC2400.s	/^STA_MEM3_BASE   EQU     0x83000000$/;"	d
SVC_Stack_Size	LPC2400.s	/^SVC_Stack_Size  EQU     0x00000300$/;"	d
SWI_Addr	LPC2400.s	/^SWI_Addr        DCD     vPortYieldProcessor$/;"	l
SWI_Handler	LPC2400.s	/^SWI_Handler     B       SWI_Handler$/;"	l
Stack_Mem	LPC2400.s	/^Stack_Mem       SPACE   Stack_Size$/;"	l
Stack_Size	LPC2400.s	/^Stack_Size  EQU     (UND_Stack_Size + SVC_Stack_Size + ABT_Stack_Size + \\$/;"	d
Stack_Top	LPC2400.s	/^Stack_Top	EQU	Stack_Mem + Stack_Size$/;"	d
TRUE	LCD/general.h	69;"	d
UND_Stack_Size	LPC2400.s	/^UND_Stack_Size  EQU     0x00000008$/;"	d
USBCLKCFG_OFS	LPC2400.s	/^USBCLKCFG_OFS   EQU     0x108           ; USB Clock Divider Reg Offset$/;"	d
USBCLKCFG_Val	LPC2400.s	/^USBCLKCFG_Val   EQU     0x00000005$/;"	d
USBCLKDivValue	LCD/config.h	17;"	d
USR_Stack_Size	LPC2400.s	/^USR_Stack_Size  EQU     0x00000008$/;"	d
Undef_Addr	LPC2400.s	/^Undef_Addr      DCD     Undef_Handler$/;"	l
Undef_Handler	LPC2400.s	/^Undef_Handler   B       Undef_Handler$/;"	l
V1_CONTROLLER	LCD/lcd_hw.h	23;"	d
V2_CONTROLLER	LCD/lcd_hw.h	24;"	d
Vectors	LPC2400.s	/^Vectors         LDR     PC, Reset_Addr         $/;"	l
WHITE	LCD/lcd_grph.h	64;"	d
WHITEBOARD	utility.h	/^    WHITEBOARD,$/;"	e	enum:Region_t
Wait_0	LPC2400.s	/^Wait_0          SUBS    R6, R6, #1                ; Delay ~100 ms proc clk 57.6 MHz$/;"	l
Wait_1	LPC2400.s	/^Wait_1          SUBS    R6, R6, #1                ; Delay ~200 ms proc clk 57.6 MHz$/;"	l
Wait_2	LPC2400.s	/^Wait_2          SUBS    R6, R6, #1                ; Delay$/;"	l
Wait_3	LPC2400.s	/^Wait_3          SUBS    R6, R6, #1                ; Delay ~1 ms @ proc clk 57.6 MHz$/;"	l
Wait_4	LPC2400.s	/^Wait_4          SUBS    R6, R6, #1                ; Delay ~100 ms @ proc clk 57.6 MHz$/;"	l
Wait_5	LPC2400.s	/^Wait_5          SUBS    R6, R6, #1                ; Delay ~10 ms @ proc clk 57.6 MHz$/;"	l
XXXXXXXX	LCD/font_macro.h	259;"	d
XXXXXXX_	LCD/font_macro.h	258;"	d
XXXXXX_X	LCD/font_macro.h	257;"	d
XXXXXX__	LCD/font_macro.h	256;"	d
XXXXX_XX	LCD/font_macro.h	255;"	d
XXXXX_X_	LCD/font_macro.h	254;"	d
XXXXX__X	LCD/font_macro.h	253;"	d
XXXXX___	LCD/font_macro.h	252;"	d
XXXX_XXX	LCD/font_macro.h	251;"	d
XXXX_XX_	LCD/font_macro.h	250;"	d
XXXX_X_X	LCD/font_macro.h	249;"	d
XXXX_X__	LCD/font_macro.h	248;"	d
XXXX__XX	LCD/font_macro.h	247;"	d
XXXX__X_	LCD/font_macro.h	246;"	d
XXXX___X	LCD/font_macro.h	245;"	d
XXXX____	LCD/font_macro.h	244;"	d
XXX_XXXX	LCD/font_macro.h	243;"	d
XXX_XXX_	LCD/font_macro.h	242;"	d
XXX_XX_X	LCD/font_macro.h	241;"	d
XXX_XX__	LCD/font_macro.h	240;"	d
XXX_X_XX	LCD/font_macro.h	239;"	d
XXX_X_X_	LCD/font_macro.h	238;"	d
XXX_X__X	LCD/font_macro.h	237;"	d
XXX_X___	LCD/font_macro.h	236;"	d
XXX__XXX	LCD/font_macro.h	235;"	d
XXX__XX_	LCD/font_macro.h	234;"	d
XXX__X_X	LCD/font_macro.h	233;"	d
XXX__X__	LCD/font_macro.h	232;"	d
XXX___XX	LCD/font_macro.h	231;"	d
XXX___X_	LCD/font_macro.h	230;"	d
XXX____X	LCD/font_macro.h	229;"	d
XXX_____	LCD/font_macro.h	228;"	d
XX_XXXXX	LCD/font_macro.h	227;"	d
XX_XXXX_	LCD/font_macro.h	226;"	d
XX_XXX_X	LCD/font_macro.h	225;"	d
XX_XXX__	LCD/font_macro.h	224;"	d
XX_XX_XX	LCD/font_macro.h	223;"	d
XX_XX_X_	LCD/font_macro.h	222;"	d
XX_XX__X	LCD/font_macro.h	221;"	d
XX_XX___	LCD/font_macro.h	220;"	d
XX_X_XXX	LCD/font_macro.h	219;"	d
XX_X_XX_	LCD/font_macro.h	218;"	d
XX_X_X_X	LCD/font_macro.h	217;"	d
XX_X_X__	LCD/font_macro.h	216;"	d
XX_X__XX	LCD/font_macro.h	215;"	d
XX_X__X_	LCD/font_macro.h	214;"	d
XX_X___X	LCD/font_macro.h	213;"	d
XX_X____	LCD/font_macro.h	212;"	d
XX__XXXX	LCD/font_macro.h	211;"	d
XX__XXX_	LCD/font_macro.h	210;"	d
XX__XX_X	LCD/font_macro.h	209;"	d
XX__XX__	LCD/font_macro.h	208;"	d
XX__X_XX	LCD/font_macro.h	207;"	d
XX__X_X_	LCD/font_macro.h	206;"	d
XX__X__X	LCD/font_macro.h	205;"	d
XX__X___	LCD/font_macro.h	204;"	d
XX___XXX	LCD/font_macro.h	203;"	d
XX___XX_	LCD/font_macro.h	202;"	d
XX___X_X	LCD/font_macro.h	201;"	d
XX___X__	LCD/font_macro.h	200;"	d
XX____XX	LCD/font_macro.h	199;"	d
XX____X_	LCD/font_macro.h	198;"	d
XX_____X	LCD/font_macro.h	197;"	d
XX______	LCD/font_macro.h	196;"	d
X_XXXXXX	LCD/font_macro.h	195;"	d
X_XXXXX_	LCD/font_macro.h	194;"	d
X_XXXX_X	LCD/font_macro.h	193;"	d
X_XXXX__	LCD/font_macro.h	192;"	d
X_XXX_XX	LCD/font_macro.h	191;"	d
X_XXX_X_	LCD/font_macro.h	190;"	d
X_XXX__X	LCD/font_macro.h	189;"	d
X_XXX___	LCD/font_macro.h	188;"	d
X_XX_XXX	LCD/font_macro.h	187;"	d
X_XX_XX_	LCD/font_macro.h	186;"	d
X_XX_X_X	LCD/font_macro.h	185;"	d
X_XX_X__	LCD/font_macro.h	184;"	d
X_XX__XX	LCD/font_macro.h	183;"	d
X_XX__X_	LCD/font_macro.h	182;"	d
X_XX___X	LCD/font_macro.h	181;"	d
X_XX____	LCD/font_macro.h	180;"	d
X_X_XXXX	LCD/font_macro.h	179;"	d
X_X_XXX_	LCD/font_macro.h	178;"	d
X_X_XX_X	LCD/font_macro.h	177;"	d
X_X_XX__	LCD/font_macro.h	176;"	d
X_X_X_XX	LCD/font_macro.h	175;"	d
X_X_X_X_	LCD/font_macro.h	174;"	d
X_X_X__X	LCD/font_macro.h	173;"	d
X_X_X___	LCD/font_macro.h	172;"	d
X_X__XXX	LCD/font_macro.h	171;"	d
X_X__XX_	LCD/font_macro.h	170;"	d
X_X__X_X	LCD/font_macro.h	169;"	d
X_X__X__	LCD/font_macro.h	168;"	d
X_X___XX	LCD/font_macro.h	167;"	d
X_X___X_	LCD/font_macro.h	166;"	d
X_X____X	LCD/font_macro.h	165;"	d
X_X_____	LCD/font_macro.h	164;"	d
X__XXXXX	LCD/font_macro.h	163;"	d
X__XXXX_	LCD/font_macro.h	162;"	d
X__XXX_X	LCD/font_macro.h	161;"	d
X__XXX__	LCD/font_macro.h	160;"	d
X__XX_XX	LCD/font_macro.h	159;"	d
X__XX_X_	LCD/font_macro.h	158;"	d
X__XX__X	LCD/font_macro.h	157;"	d
X__XX___	LCD/font_macro.h	156;"	d
X__X_XXX	LCD/font_macro.h	155;"	d
X__X_XX_	LCD/font_macro.h	154;"	d
X__X_X_X	LCD/font_macro.h	153;"	d
X__X_X__	LCD/font_macro.h	152;"	d
X__X__XX	LCD/font_macro.h	151;"	d
X__X__X_	LCD/font_macro.h	150;"	d
X__X___X	LCD/font_macro.h	149;"	d
X__X____	LCD/font_macro.h	148;"	d
X___XXXX	LCD/font_macro.h	147;"	d
X___XXX_	LCD/font_macro.h	146;"	d
X___XX_X	LCD/font_macro.h	145;"	d
X___XX__	LCD/font_macro.h	144;"	d
X___X_XX	LCD/font_macro.h	143;"	d
X___X_X_	LCD/font_macro.h	142;"	d
X___X__X	LCD/font_macro.h	141;"	d
X___X___	LCD/font_macro.h	140;"	d
X____XXX	LCD/font_macro.h	139;"	d
X____XX_	LCD/font_macro.h	138;"	d
X____X_X	LCD/font_macro.h	137;"	d
X____X__	LCD/font_macro.h	136;"	d
X_____XX	LCD/font_macro.h	135;"	d
X_____X_	LCD/font_macro.h	134;"	d
X______X	LCD/font_macro.h	133;"	d
X_______	LCD/font_macro.h	132;"	d
YELLOW	LCD/lcd_grph.h	63;"	d
_FONT5X7_H_	LCD/font5x7.h	2;"	d
_FONT_MACRO_H_	LCD/font_macro.h	2;"	d
_GENERAL_H	LCD/general.h	58;"	d
_LCD_GRPH_	LCD/lcd_grph.h	38;"	d
_LCD_HW_	LCD/lcd_hw.h	21;"	d
_XXXXXXX	LCD/font_macro.h	131;"	d
_XXXXXX_	LCD/font_macro.h	130;"	d
_XXXXX_X	LCD/font_macro.h	129;"	d
_XXXXX__	LCD/font_macro.h	128;"	d
_XXXX_XX	LCD/font_macro.h	127;"	d
_XXXX_X_	LCD/font_macro.h	126;"	d
_XXXX__X	LCD/font_macro.h	125;"	d
_XXXX___	LCD/font_macro.h	124;"	d
_XXX_XXX	LCD/font_macro.h	123;"	d
_XXX_XX_	LCD/font_macro.h	122;"	d
_XXX_X_X	LCD/font_macro.h	121;"	d
_XXX_X__	LCD/font_macro.h	120;"	d
_XXX__XX	LCD/font_macro.h	119;"	d
_XXX__X_	LCD/font_macro.h	118;"	d
_XXX___X	LCD/font_macro.h	117;"	d
_XXX____	LCD/font_macro.h	116;"	d
_XX_XXXX	LCD/font_macro.h	115;"	d
_XX_XXX_	LCD/font_macro.h	114;"	d
_XX_XX_X	LCD/font_macro.h	113;"	d
_XX_XX__	LCD/font_macro.h	112;"	d
_XX_X_XX	LCD/font_macro.h	111;"	d
_XX_X_X_	LCD/font_macro.h	110;"	d
_XX_X__X	LCD/font_macro.h	109;"	d
_XX_X___	LCD/font_macro.h	108;"	d
_XX__XXX	LCD/font_macro.h	107;"	d
_XX__XX_	LCD/font_macro.h	106;"	d
_XX__X_X	LCD/font_macro.h	105;"	d
_XX__X__	LCD/font_macro.h	104;"	d
_XX___XX	LCD/font_macro.h	103;"	d
_XX___X_	LCD/font_macro.h	102;"	d
_XX____X	LCD/font_macro.h	101;"	d
_XX_____	LCD/font_macro.h	100;"	d
_X_XXXXX	LCD/font_macro.h	99;"	d
_X_XXXX_	LCD/font_macro.h	98;"	d
_X_XXX_X	LCD/font_macro.h	97;"	d
_X_XXX__	LCD/font_macro.h	96;"	d
_X_XX_XX	LCD/font_macro.h	95;"	d
_X_XX_X_	LCD/font_macro.h	94;"	d
_X_XX__X	LCD/font_macro.h	93;"	d
_X_XX___	LCD/font_macro.h	92;"	d
_X_X_XXX	LCD/font_macro.h	91;"	d
_X_X_XX_	LCD/font_macro.h	90;"	d
_X_X_X_X	LCD/font_macro.h	89;"	d
_X_X_X__	LCD/font_macro.h	88;"	d
_X_X__XX	LCD/font_macro.h	87;"	d
_X_X__X_	LCD/font_macro.h	86;"	d
_X_X___X	LCD/font_macro.h	85;"	d
_X_X____	LCD/font_macro.h	84;"	d
_X__XXXX	LCD/font_macro.h	83;"	d
_X__XXX_	LCD/font_macro.h	82;"	d
_X__XX_X	LCD/font_macro.h	81;"	d
_X__XX__	LCD/font_macro.h	80;"	d
_X__X_XX	LCD/font_macro.h	79;"	d
_X__X_X_	LCD/font_macro.h	78;"	d
_X__X__X	LCD/font_macro.h	77;"	d
_X__X___	LCD/font_macro.h	76;"	d
_X___XXX	LCD/font_macro.h	75;"	d
_X___XX_	LCD/font_macro.h	74;"	d
_X___X_X	LCD/font_macro.h	73;"	d
_X___X__	LCD/font_macro.h	72;"	d
_X____XX	LCD/font_macro.h	71;"	d
_X____X_	LCD/font_macro.h	70;"	d
_X_____X	LCD/font_macro.h	69;"	d
_X______	LCD/font_macro.h	68;"	d
__FILE	Retarget.c	/^struct __FILE { int handle; \/* Add whatever you need here *\/ };$/;"	s	file:
__XXXXXX	LCD/font_macro.h	67;"	d
__XXXXX_	LCD/font_macro.h	66;"	d
__XXXX_X	LCD/font_macro.h	65;"	d
__XXXX__	LCD/font_macro.h	64;"	d
__XXX_XX	LCD/font_macro.h	63;"	d
__XXX_X_	LCD/font_macro.h	62;"	d
__XXX__X	LCD/font_macro.h	61;"	d
__XXX___	LCD/font_macro.h	60;"	d
__XX_XXX	LCD/font_macro.h	59;"	d
__XX_XX_	LCD/font_macro.h	58;"	d
__XX_X_X	LCD/font_macro.h	57;"	d
__XX_X__	LCD/font_macro.h	56;"	d
__XX__XX	LCD/font_macro.h	55;"	d
__XX__X_	LCD/font_macro.h	54;"	d
__XX___X	LCD/font_macro.h	53;"	d
__XX____	LCD/font_macro.h	52;"	d
__X_XXXX	LCD/font_macro.h	51;"	d
__X_XXX_	LCD/font_macro.h	50;"	d
__X_XX_X	LCD/font_macro.h	49;"	d
__X_XX__	LCD/font_macro.h	48;"	d
__X_X_XX	LCD/font_macro.h	47;"	d
__X_X_X_	LCD/font_macro.h	46;"	d
__X_X__X	LCD/font_macro.h	45;"	d
__X_X___	LCD/font_macro.h	44;"	d
__X__XXX	LCD/font_macro.h	43;"	d
__X__XX_	LCD/font_macro.h	42;"	d
__X__X_X	LCD/font_macro.h	41;"	d
__X__X__	LCD/font_macro.h	40;"	d
__X___XX	LCD/font_macro.h	39;"	d
__X___X_	LCD/font_macro.h	38;"	d
__X____X	LCD/font_macro.h	37;"	d
__X_____	LCD/font_macro.h	36;"	d
___XXXXX	LCD/font_macro.h	35;"	d
___XXXX_	LCD/font_macro.h	34;"	d
___XXX_X	LCD/font_macro.h	33;"	d
___XXX__	LCD/font_macro.h	32;"	d
___XX_XX	LCD/font_macro.h	31;"	d
___XX_X_	LCD/font_macro.h	30;"	d
___XX__X	LCD/font_macro.h	29;"	d
___XX___	LCD/font_macro.h	28;"	d
___X_XXX	LCD/font_macro.h	27;"	d
___X_XX_	LCD/font_macro.h	26;"	d
___X_X_X	LCD/font_macro.h	25;"	d
___X_X__	LCD/font_macro.h	24;"	d
___X__XX	LCD/font_macro.h	23;"	d
___X__X_	LCD/font_macro.h	22;"	d
___X___X	LCD/font_macro.h	21;"	d
___X____	LCD/font_macro.h	20;"	d
____XXXX	LCD/font_macro.h	19;"	d
____XXX_	LCD/font_macro.h	18;"	d
____XX_X	LCD/font_macro.h	17;"	d
____XX__	LCD/font_macro.h	16;"	d
____X_XX	LCD/font_macro.h	15;"	d
____X_X_	LCD/font_macro.h	14;"	d
____X__X	LCD/font_macro.h	13;"	d
____X___	LCD/font_macro.h	12;"	d
_____XXX	LCD/font_macro.h	11;"	d
_____XX_	LCD/font_macro.h	10;"	d
_____X_X	LCD/font_macro.h	9;"	d
_____X__	LCD/font_macro.h	8;"	d
______XX	LCD/font_macro.h	7;"	d
______X_	LCD/font_macro.h	6;"	d
_______X	LCD/font_macro.h	5;"	d
________	LCD/font_macro.h	4;"	d
__heap_base	LPC2400.s	/^__heap_base$/;"	l
__heap_limit	LPC2400.s	/^__heap_limit$/;"	l
__stdout	Retarget.c	/^FILE __stdout;$/;"	v
__user_initial_stackheap	LPC2400.s	/^__user_initial_stackheap$/;"	l
_config_h_	LCD/config.h	11;"	d
_sys_exit	Retarget.c	/^void _sys_exit(int return_code) {$/;"	f
_ttywrch	Retarget.c	/^void _ttywrch(int ch) {$/;"	f
activeController	LCD/lcd_hw.c	/^unsigned char activeController;$/;"	v
backgroundColor	LCD/lcd_grph.c	/^static lcd_color_t  backgroundColor = BLACK;$/;"	v	file:
button	utility.h	/^typedef struct button$/;"	s
buttons	lcd.c	/^Button buttons[] = {$/;"	v
cmd	lcd.c	/^Command cmd;$/;"	v
color	utility.h	/^    lcd_color_t color;$/;"	m	struct:button
configCPU_CLOCK_HZ	FreeRTOSConfig.h	92;"	d
configIDLE_SHOULD_YIELD	FreeRTOSConfig.h	101;"	d
configMAX_CO_ROUTINE_PRIORITIES	FreeRTOSConfig.h	107;"	d
configMAX_PRIORITIES	FreeRTOSConfig.h	95;"	d
configMAX_TASK_NAME_LEN	FreeRTOSConfig.h	98;"	d
configMINIMAL_STACK_SIZE	FreeRTOSConfig.h	96;"	d
configPERIPHERAL_CLOCK_HZ	FreeRTOSConfig.h	93;"	d
configQUEUE_REGISTRY_SIZE	FreeRTOSConfig.h	103;"	d
configTICK_RATE_HZ	FreeRTOSConfig.h	94;"	d
configTOTAL_HEAP_SIZE	FreeRTOSConfig.h	97;"	d
configUSE_16_BIT_TICKS	FreeRTOSConfig.h	100;"	d
configUSE_CO_ROUTINES	FreeRTOSConfig.h	106;"	d
configUSE_IDLE_HOOK	FreeRTOSConfig.h	90;"	d
configUSE_PREEMPTION	FreeRTOSConfig.h	89;"	d
configUSE_TICK_HOOK	FreeRTOSConfig.h	91;"	d
configUSE_TRACE_FACILITY	FreeRTOSConfig.h	99;"	d
consoleBUFFER_LEN	console.c	11;"	d	file:
consoleMAX_DELAY	console.c	12;"	d	file:
consoleSTACK_SIZE	console.c	10;"	d	file:
display	utility.h	/^    char display[32];$/;"	m	struct:button
drawButton	lcd.c	/^static void drawButton(Button *button)$/;"	f	file:
drawScreen	lcd.c	/^static void drawScreen()$/;"	f	file:
eBaud	serial.h	/^} eBaud;$/;"	t	typeref:enum:__anon5
eCOMPort	serial.h	/^} eCOMPort;$/;"	t	typeref:enum:__anon1
eDataBits	serial.h	/^} eDataBits;$/;"	t	typeref:enum:__anon4
eParity	serial.h	/^} eParity;$/;"	t	typeref:enum:__anon2
eStopBits	serial.h	/^} eStopBits;$/;"	t	typeref:enum:__anon3
ferror	Retarget.c	/^int ferror(FILE *f) {$/;"	f
fgetc	Retarget.c	/^int fgetc(FILE *f) {$/;"	f
font5x7	LCD/font5x7.c	/^const unsigned char font5x7[][8] = $/;"	v
font_mask	LCD/lcd_grph.c	/^static unsigned char const  font_mask[8] = {0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01};$/;"	v	file:
foregroundColor	LCD/lcd_grph.c	/^static lcd_color_t  foregroundColor = WHITE;$/;"	v	file:
fputc	Retarget.c	/^int fputc(int ch, FILE *f) {$/;"	f
getButton	lcd.c	/^static Button * getButton(unsigned int x, unsigned int y)$/;"	f	file:
getTouch	LCD/lcd_hw.c	/^getTouch(unsigned int* xPos, unsigned int* yPos, unsigned int* pressure)$/;"	f
hLine	LCD/lcd_grph.c	/^static void hLine(unsigned short x0, unsigned short y0, unsigned short x1, lcd_color_t color) $/;"	f	file:
handle	Retarget.c	/^struct __FILE { int handle; \/* Add whatever you need here *\/ };$/;"	m	struct:__FILE	file:
lTHREEmpty	serial.c	/^static volatile long lTHREEmpty;$/;"	v	file:
lcdSTACK_SIZE	lcd.c	18;"	d	file:
lcd_circle	LCD/lcd_grph.c	/^void lcd_circle(unsigned short x0, unsigned short y0, unsigned short r, lcd_color_t color)$/;"	f
lcd_color_t	LCD/lcd_grph.h	/^typedef unsigned short lcd_color_t;$/;"	t
lcd_drawRect	LCD/lcd_grph.c	/^void lcd_drawRect(unsigned short x0, unsigned short y0, unsigned short x1, unsigned short y1, lcd_color_t color)$/;"	f
lcd_fillRect	LCD/lcd_grph.c	/^void lcd_fillRect(unsigned short x0, unsigned short y0, unsigned short x1, unsigned short y1, lcd_color_t color)$/;"	f
lcd_fillScreen	LCD/lcd_grph.c	/^void lcd_fillScreen(lcd_color_t color)$/;"	f
lcd_fontColor	LCD/lcd_grph.c	/^void lcd_fontColor(lcd_color_t foreground, lcd_color_t background)$/;"	f
lcd_hw_init	LCD/lcd_hw.c	/^void lcd_hw_init(void)$/;"	f
lcd_init	LCD/lcd_hw.c	/^unsigned int lcd_init(void)$/;"	f
lcd_line	LCD/lcd_grph.c	/^void lcd_line(unsigned short x0, unsigned short y0, unsigned short x1, unsigned short y1, lcd_color_t color)$/;"	f
lcd_movePen	LCD/lcd_grph.c	/^void lcd_movePen(unsigned short x, unsigned short y)$/;"	f
lcd_picture	LCD/lcd_grph.c	/^void lcd_picture(unsigned short x, unsigned short y, unsigned short width, unsigned short height, unsigned short *pPicture)$/;"	f
lcd_pictureBegin	LCD/lcd_grph.c	/^void lcd_pictureBegin(unsigned short x, unsigned short y, unsigned short width, unsigned short height)$/;"	f
lcd_pictureData	LCD/lcd_grph.c	/^void lcd_pictureData(unsigned short *pPicture, unsigned short len)$/;"	f
lcd_pictureEnd	LCD/lcd_grph.c	/^void lcd_pictureEnd(void)$/;"	f
lcd_point	LCD/lcd_grph.c	/^void lcd_point(unsigned short x, unsigned short y, lcd_color_t color)$/;"	f
lcd_putChar	LCD/lcd_grph.c	/^unsigned long lcd_putChar(unsigned short x, unsigned short y, unsigned char ch)$/;"	f
lcd_putString	LCD/lcd_grph.c	/^void lcd_putString(unsigned short x, unsigned short y, unsigned char *pStr)$/;"	f
lcd_setWindow	LCD/lcd_grph.c	/^unsigned long lcd_setWindow(unsigned short x0, unsigned short y0, unsigned short x1, unsigned short y1)  $/;"	f
main	main.c	/^int main (void)$/;"	f
mdelay	LCD/lcd_hw.c	/^void mdelay( unsigned int delayInMs )$/;"	f
pcPrompt	console.c	/^const signed char *pcPrompt = "Command> ";$/;"	v
portTASK_FUNCTION	console.c	/^static portTASK_FUNCTION( vConsoleTask, pvParameters )$/;"	f	file:
portTASK_FUNCTION	lcd.c	/^static portTASK_FUNCTION( vLcdTask, pvParameters )$/;"	f	file:
portTASK_FUNCTION	sensors.c	/^static portTASK_FUNCTION( vSensorsTask, pvParameters )$/;"	f	file:
prvSetupHardware	main.c	/^static void prvSetupHardware( void )$/;"	f	file:
readFromDisp	LCD/lcd_hw.c	/^readFromDisp(void)$/;"	f
readFromReg	LCD/lcd_hw.c	/^readFromReg(unsigned char addr)$/;"	f
region	utility.h	/^	int region;$/;"	m	struct:Command
region	utility.h	/^    Region_t region; $/;"	m	struct:button
sendSpi	LCD/lcd_hw.c	/^sendSpi(unsigned char indata)$/;"	f	file:
sensorsSTACK_SIZE	sensors.c	26;"	d	file:
ser110	serial.h	/^	ser110,		$/;"	e	enum:__anon5
ser115200	serial.h	/^	ser115200$/;"	e	enum:__anon5
ser1200	serial.h	/^	ser1200,	$/;"	e	enum:__anon5
ser134	serial.h	/^	ser134,		$/;"	e	enum:__anon5
ser150	serial.h	/^	ser150,    $/;"	e	enum:__anon5
ser1800	serial.h	/^	ser1800,	$/;"	e	enum:__anon5
ser19200	serial.h	/^	ser19200,	$/;"	e	enum:__anon5
ser1_STOP_BIT	serial.c	92;"	d	file:
ser200	serial.h	/^	ser200,$/;"	e	enum:__anon5
ser2400	serial.h	/^	ser2400,   $/;"	e	enum:__anon5
ser300	serial.h	/^	ser300,		$/;"	e	enum:__anon5
ser38400	serial.h	/^	ser38400,	$/;"	e	enum:__anon5
ser4800	serial.h	/^	ser4800,$/;"	e	enum:__anon5
ser50	serial.h	/^	ser50,		$/;"	e	enum:__anon5
ser57600	serial.h	/^	ser57600,	$/;"	e	enum:__anon5
ser600	serial.h	/^	ser600,		$/;"	e	enum:__anon5
ser75	serial.h	/^	ser75,		$/;"	e	enum:__anon5
ser8_BIT_CHARS	serial.c	93;"	d	file:
ser9600	serial.h	/^	ser9600,		$/;"	e	enum:__anon5
serBITS_5	serial.h	/^	serBITS_5, $/;"	e	enum:__anon4
serBITS_6	serial.h	/^	serBITS_6, $/;"	e	enum:__anon4
serBITS_7	serial.h	/^	serBITS_7, $/;"	e	enum:__anon4
serBITS_8	serial.h	/^	serBITS_8 $/;"	e	enum:__anon4
serCLEAR_FIFO	serial.c	95;"	d	file:
serCLEAR_VIC_INTERRUPT	serial.c	110;"	d	file:
serCOM1	serial.h	/^	serCOM1, $/;"	e	enum:__anon1
serCOM2	serial.h	/^	serCOM2, $/;"	e	enum:__anon1
serCOM3	serial.h	/^	serCOM3, $/;"	e	enum:__anon1
serCOM4	serial.h	/^	serCOM4, $/;"	e	enum:__anon1
serCOM5	serial.h	/^	serCOM5, $/;"	e	enum:__anon1
serCOM6	serial.h	/^	serCOM6, $/;"	e	enum:__anon1
serCOM7	serial.h	/^	serCOM7, $/;"	e	enum:__anon1
serCOM8	serial.h	/^	serCOM8 $/;"	e	enum:__anon1
serDLAB	serial.c	89;"	d	file:
serENABLE_INTERRUPTS	serial.c	90;"	d	file:
serEVEN_PARITY	serial.h	/^	serEVEN_PARITY, $/;"	e	enum:__anon2
serFIFO_ON	serial.c	94;"	d	file:
serHANDLE	serial.c	105;"	d	file:
serINTERRUPT_IS_PENDING	serial.c	118;"	d	file:
serINTERRUPT_SOURCE_MASK	serial.c	117;"	d	file:
serINVALID_QUEUE	serial.c	104;"	d	file:
serMARK_PARITY	serial.h	/^	serMARK_PARITY, $/;"	e	enum:__anon2
serMAX_BLOCK	serial.c	107;"	d	file:
serNO_BLOCK	serial.c	106;"	d	file:
serNO_PARITY	serial.c	91;"	d	file:
serNO_PARITY	serial.h	/^	serNO_PARITY, $/;"	e	enum:__anon2
serODD_PARITY	serial.h	/^	serODD_PARITY, $/;"	e	enum:__anon2
serSOURCE_ERROR	serial.c	115;"	d	file:
serSOURCE_RX	serial.c	116;"	d	file:
serSOURCE_RX_TIMEOUT	serial.c	114;"	d	file:
serSOURCE_THRE	serial.c	113;"	d	file:
serSPACE_PARITY	serial.h	/^	serSPACE_PARITY $/;"	e	enum:__anon2
serSTOP_1	serial.h	/^	serSTOP_1, $/;"	e	enum:__anon3
serSTOP_2	serial.h	/^	serSTOP_2 $/;"	e	enum:__anon3
serU0VIC_CHANNEL	serial.c	99;"	d	file:
serU0VIC_CHANNEL_BIT	serial.c	100;"	d	file:
serU0VIC_PRIORITY	serial.c	101;"	d	file:
serWANTED_CLOCK_SCALING	serial.c	96;"	d	file:
setpwm	sensors.c	/^void setpwm()$/;"	f
state	utility.h	/^    ButtonState state;$/;"	m	struct:button
tBool	LCD/general.h	/^typedef unsigned char tBool;$/;"	t
tS16	LCD/general.h	/^typedef signed short tS16;$/;"	t
tS32	LCD/general.h	/^typedef signed int tS32;$/;"	t
tS8	LCD/general.h	/^typedef signed char tS8;$/;"	t
tU16	LCD/general.h	/^typedef unsigned short tU16;$/;"	t
tU32	LCD/general.h	/^typedef unsigned int tU32;$/;"	t
tU8	LCD/general.h	/^typedef unsigned char tU8;$/;"	t
vLCD_ISREntry	lcdISR.s	/^vLCD_ISREntry$/;"	l
vLCD_ISRHandler	lcd.c	/^void vLCD_ISRHandler( void )$/;"	f
vLine	LCD/lcd_grph.c	/^static void vLine(unsigned short x0, unsigned short y0, unsigned short y1, lcd_color_t color)$/;"	f	file:
vSerialPutString	serial.c	/^void vSerialPutString( xComPortHandle pxPort, const signed char * const pcString, unsigned short usStringLength )$/;"	f
vStartConsole	console.c	/^void vStartConsole( unsigned portBASE_TYPE uxPriority, unsigned long ulBaudRate)$/;"	f
vStartLcd	lcd.c	/^void vStartLcd( unsigned portBASE_TYPE uxPriority, xQueueHandle xQueue )$/;"	f
vStartSensors	sensors.c	/^void vStartSensors( unsigned portBASE_TYPE uxPriority, xQueueHandle xQueue )$/;"	f
vUART_ISREntry	serialISR.s	/^vUART_ISREntry$/;"	l
vUART_ISRHandler	serial.c	/^void vUART_ISRHandler( void )$/;"	f
value	utility.h	/^	int value;$/;"	m	struct:Command
writeLcdCommand	LCD/lcd_hw.c	/^writeLcdCommand(unsigned short command)$/;"	f
writeToDisp	LCD/lcd_hw.c	/^writeToDisp(unsigned short data)$/;"	f
writeToReg	LCD/lcd_hw.c	/^writeToReg(unsigned short addr, unsigned short data)$/;"	f
x0	utility.h	/^    unsigned int x0, y0, x1, y1;$/;"	m	struct:button
x1	utility.h	/^    unsigned int x0, y0, x1, y1;$/;"	m	struct:button
xCharsForTx	serial.c	/^static xQueueHandle xCharsForTx; $/;"	v	file:
xComPortHandle	serial.h	/^typedef void * xComPortHandle;$/;"	t
xConsolePortHandle	console.c	/^xComPortHandle xConsolePortHandle(void)$/;"	f
xLcdSemphr	lcd.c	/^xSemaphoreHandle xLcdSemphr;$/;"	v
xPort	console.c	/^static xComPortHandle xPort;$/;"	v	file:
xRxedChars	serial.c	/^static xQueueHandle xRxedChars; $/;"	v	file:
xSerialGetChar	serial.c	/^signed portBASE_TYPE xSerialGetChar( xComPortHandle pxPort, signed char *pcRxedChar, portTickType xBlockTime )$/;"	f
xSerialPortInitMinimal	serial.c	/^xComPortHandle xSerialPortInitMinimal( unsigned long ulWantedBaud, unsigned portBASE_TYPE uxQueueLength )$/;"	f
xSerialPutChar	serial.c	/^signed portBASE_TYPE xSerialPutChar( xComPortHandle pxPort, signed char cOutChar, portTickType xBlockTime )$/;"	f
y0	utility.h	/^    unsigned int x0, y0, x1, y1;$/;"	m	struct:button
y1	utility.h	/^    unsigned int x0, y0, x1, y1;$/;"	m	struct:button
